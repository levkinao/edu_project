
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидМаршрутаПриИзменении(Элемент)
	
	УстановитьВидимостьРеквизитовПоВидуМаршрута(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Инициализация(Команда)
	
	ОчиститьСообщения();
	Если ПроверитьЗаполнение() Тогда
		ИнициализацияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	УстановитьВидимостьРеквизитовПоВидуМаршрута(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьРеквизитовПоВидуМаршрута(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ИДГруппы.Видимость = Объект.ВидМаршрута = ПредопределенноеЗначение("Перечисление.ДействияПриОбмене.ЗагрузкаДанных");
	Элементы.Раздел.Видимость = Объект.ВидМаршрута = ПредопределенноеЗначение("Перечисление.ДействияПриОбмене.ВыгрузкаДанных");
	
КонецПроцедуры

&НаСервере
Процедура ИнициализацияНаСервере()
	
	АдресПодключения= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ПараметрыПодключения, "Адрес");
	
	Если Объект.ВидМаршрута = Перечисления.ДействияПриОбмене.ВыгрузкаДанных Тогда
		
		ПараметрыОтправителя = РаботаСКафкаСервер.ИнициализироватьОтправителя(
			Объект.ПараметрыПодключения, Объект.Топик, Объект.Раздел);
		
		Если ПараметрыОтправителя.Успешно Тогда
			ТекстСообщения = НСтр("ru = 'Инициализация успешно выполнена!'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ПараметрыОтправителя.ОписаниеОшибки);
		КонецЕсли;
		
	ИначеЕсли Объект.ВидМаршрута = Перечисления.ДействияПриОбмене.ЗагрузкаДанных Тогда
		
		ПараметрыПолучателя = РаботаСКафкаСервер.ПараметрыОбъектаКафка();
		
		РаботаСКафкаСервер.СоздатьПолучателя(ПараметрыПолучателя);
		Если Не ПараметрыПолучателя.Успешно Тогда
			Сообщить(ПараметрыПолучателя.ОписаниеОшибки);	
			Возврат;
		КонецЕсли;
		
		Для Каждого КлючИЗначение Из РаботаСКафкаСервер.ГлобальныеПараметрыЧтения() Цикл
			РезультатУстановкиПараметра = РаботаСКафкаСервер.Получатель_УстановитьПараметрГлобальный(ПараметрыПолучателя,
				КлючИЗначение.Ключ, КлючИЗначение.Значение);
			Если Не РезультатУстановкиПараметра.Успешно Тогда
				Сообщить(РезультатУстановкиПараметра.ОписаниеОшибки);	
				Возврат;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого КлючИЗначение Из РаботаСКафкаСервер.ГлобальныеПараметрыЧтенияТопика() Цикл
			РезультатУстановкиПараметра = РаботаСКафкаСервер.Получатель_УстановитьПараметрТопика(ПараметрыПолучателя,
				КлючИЗначение.Ключ, КлючИЗначение.Значение);
			Если Не РезультатУстановкиПараметра.Успешно Тогда
				Сообщить(РезультатУстановкиПараметра.ОписаниеОшибки);	
				Возврат;
			КонецЕсли;
		КонецЦикла;

		РезультатИнициализации = РаботаСКафкаСервер.Получатель_Инициализировать(ПараметрыПолучателя, АдресПодключения, Объект.ИДГруппы);
		Если Не РезультатИнициализации.Успешно Тогда
			Сообщить(РезультатИнициализации.ОписаниеОшибки);	
			Возврат;
		КонецЕсли;
		
		РезультатИнициализации = РаботаСКафкаСервер.Получатель_Подписаться(ПараметрыПолучателя,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Топик));
		Если Не РезультатИнициализации.Успешно Тогда
			Сообщить(РезультатИнициализации.ОписаниеОшибки);	
			Возврат;
		КонецЕсли;
		
		ТекстСообщения = НСтр("ru = 'Инициализация успешно выполнена!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти