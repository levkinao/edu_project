
#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт

	ЮТТесты.ДобавитьТестовыйНабор(НСтр("ru = 'Документ Приобретение товаров и услуг: Проверка создания'"))
		.ДобавитьТест("ПроверкаСозданияПозитив", НСтр("ru = 'Проверка создания'"), НСтр("ru = 'Позитив, ПроектнаяРабота, Левкина Ольга'")).ВТранзакции()
		.ДобавитьТест("ПроверкаСозданияНегатив", НСтр("ru = 'Проверка создания: Пустая дата'"), НСтр("ru = 'Негатив, ПроектнаяРабота, Левкина Ольга'")).ВТранзакции()
		;
	ЮТТесты.ДобавитьТестовыйНабор(НСтр("ru = 'Документ Приобретение товаров и услуг: Проверка проведения'"))
		.ДобавитьТест("ПроверкаПроведенияПозитив", НСтр("ru = 'Проверка проведения'"), НСтр("ru = 'Позитив, ПроектнаяРабота, Левкина Ольга'")).ВТранзакции()
		.ДобавитьТест("ПроверкаПроведенияНегатив", НСтр("ru = 'Проверка проведения: Пустое количество'"), НСтр("ru = 'Негатив, ПроектнаяРабота, Левкина Ольга'")).ВТранзакции()
		;

КонецПроцедуры

Процедура ПроверкаСозданияПозитив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	
	ВидНоменклатурыНовый = СоздатьВидНоменклатуры("Test_Мука");
	НоменклатураНовый = СоздатьНоменклатуру("Test_Мука", ВидНоменклатурыНовый);
	СерияНовый = СоздатьСериюНоменклатуры("Test_Мука_001", ВидНоменклатурыНовый);
	
	// 2. Выполнение функции.
		
	ПриобретениеТоваровУслуг = ЮТест.Данные().КонструкторОбъекта("Документы.ПриобретениеТоваровУслуг")
		.ФикцияОбязательныхПолей()
		.ФикцияРеквизитов("Склад")
		.Установить("Дата", ТекущаяДатаСеанса())
		.ТабличнаяЧасть("Товары").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураНовый)
			.Установить("Серия", СерияНовый)
			.Установить("Количество", 100)
		.НовыйОбъект()
		;
		
	// 3. Проверка результата.
	ЮТест.ОжидаетЧто(ПриобретениеТоваровУслуг)
		.Метод("Записать").Параметр(РежимЗаписиДокумента.Запись)
		.НеВыбрасываетИсключение()
		;

КонецПроцедуры

Процедура ПроверкаСозданияНегатив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	
	ВидНоменклатурыНовый = СоздатьВидНоменклатуры("Test_Мука");
	НоменклатураНовый = СоздатьНоменклатуру("Test_Мука", ВидНоменклатурыНовый);
	СерияНовый = СоздатьСериюНоменклатуры("Test_Мука_001", ВидНоменклатурыНовый);
	
	// 2. Выполнение функции.
		
	ПриобретениеТоваровУслуг = ЮТест.Данные().КонструкторОбъекта("Документы.ПриобретениеТоваровУслуг")
		.ФикцияОбязательныхПолей()
		.ФикцияРеквизитов("Склад")
		.Установить("Дата", ТекущаяДатаСеанса())
		.ТабличнаяЧасть("Товары").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураНовый)
			.Установить("Серия", СерияНовый)
			.Установить("Количество", 100)
		.НовыйОбъект()
		;
		
	ПриобретениеТоваровУслуг.Дата = Дата(1, 1, 1);
	
	// 3. Проверка результата.
	ЮТест.ОжидаетЧто(ПриобретениеТоваровУслуг)
		.Метод("Записать").Параметр(РежимЗаписиДокумента.Запись)
		.ВыбрасываетИсключение("Значение поля ""Дата"" не может быть пустой датой")
		;

КонецПроцедуры

Процедура ПроверкаПроведенияПозитив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	
	ВидНоменклатурыНовый = СоздатьВидНоменклатуры("Test_Мука");
	НоменклатураНовый = СоздатьНоменклатуру("Test_Мука", ВидНоменклатурыНовый);
	СерияНовый = СоздатьСериюНоменклатуры("Test_Мука_001", ВидНоменклатурыНовый);
	
	// 2. Выполнение функции.
		
	ПриобретениеТоваровУслуг = ЮТест.Данные().КонструкторОбъекта("Документы.ПриобретениеТоваровУслуг")
		.ФикцияОбязательныхПолей()
		.ФикцияРеквизитов("Склад")
		.Установить("Дата", ТекущаяДатаСеанса())
		.ТабличнаяЧасть("Товары").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураНовый)
			.Установить("Серия", СерияНовый)
			.Установить("Количество", 100)
		.НовыйОбъект()
		;
		
	// 3. Проверка результата.
	ЮТест.ОжидаетЧто(ПриобретениеТоваровУслуг)
		.Метод("ПроверитьЗаполнение")
		.НеВыбрасываетИсключение()
		;
	ЮТест.ОжидаетЧто(ПриобретениеТоваровУслуг)
		.Метод("Записать").Параметр(РежимЗаписиДокумента.Проведение)
		.НеВыбрасываетИсключение()
		;
	Движения = ЮТЗапросы.ДвиженияДокумента(ПриобретениеТоваровУслуг.Ссылка, "ТоварыНаСкладах");
	ЮТест.ОжидаетЧто(Движения)
		.ИмеетДлинуБольше(0);

КонецПроцедуры

Процедура ПроверкаПроведенияНегатив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	
	ВидНоменклатурыНовый = СоздатьВидНоменклатуры("Test_Мука");
	НоменклатураНовый = СоздатьНоменклатуру("Test_Мука", ВидНоменклатурыНовый);
	СерияНовый = СоздатьСериюНоменклатуры("Test_Мука_001", ВидНоменклатурыНовый);
	
	// 2. Выполнение функции.
		
	ПриобретениеТоваровУслуг = ЮТест.Данные().КонструкторОбъекта("Документы.ПриобретениеТоваровУслуг")
		.ФикцияОбязательныхПолей()
		.ФикцияРеквизитов("Склад")
		.Установить("Дата", ТекущаяДатаСеанса())
		.ТабличнаяЧасть("Товары").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураНовый)
			.Установить("Серия", СерияНовый)
			.Установить("Количество", 0)
		.НовыйОбъект()
		;
		
	// 3. Проверка результата.
	ПриобретениеТоваровУслуг.ПроверитьЗаполнение();
	Сообщения = ПолучитьСообщенияПользователю();
	ЮТест.ОжидаетЧто(Сообщения)
		.ИмеетТип("ФиксированныйМассив")
		.ИмеетДлину(1)
		.Свойство("[0].Текст")
			.ИмеетТип("Строка")
			.Равно("Не заполнена колонка ""Количество"" в строке 1 списка ""Товары""")
			;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьВидНоменклатуры(Наименование)
	
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.ВидыНоменклатуры")
		.ФикцияОбязательныхПолей()
		.Установить("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Товар)
		.Установить("Наименование", Наименование)
		.Установить("ИспользоватьСерии", Истина)
		;
		
	ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СоздатьНоменклатуру(Наименование, ВидНоменклатуры)
	
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.Номенклатура")
		.ФикцияОбязательныхПолей()
		.Установить("ВидНоменклатуры", ВидНоменклатуры)
		.Установить("Наименование", Наименование)
		;
		
	ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СоздатьСериюНоменклатуры(Наименование, ВидНоменклатуры)
	
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.СерииНоменклатуры")
		.ФикцияОбязательныхПолей()
		.Установить("ВидНоменклатуры", ВидНоменклатуры)
		.Установить("Наименование", Наименование)
		;
		
	ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

#КонецОбласти