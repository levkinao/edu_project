
#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт

	ЮТТесты.ДобавитьТестовыйНабор(НСтр("ru = 'Регистр накопления Расходы сырья на производство кондитерских изделий: Проверка формирования движений'")).ВТранзакции()
		.ДобавитьТест("ПроверкаФормированияДвиженийПозитив", НСтр("ru = 'Проверка формирования движений'"), НСтр("ru = 'Позитив, ПроектнаяРабота, Левкина Ольга'"))
		.ДобавитьТест("ПроверкаФормированияДвиженийНегатив", НСтр("ru = 'Проверка формирования движений: для выпуска требуется только работа'"), НСтр("ru = 'Негатив, ПроектнаяРабота, Левкина Ольга'"))
		;

КонецПроцедуры

Процедура ПроверкаФормированияДвиженийПозитив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	ВидНоменклатурыМатериал = СоздатьВидНоменклатуры("Test_Мука", Истина, Перечисления.ТипыНоменклатуры.Товар);
	НоменклатураМатериал = СоздатьНоменклатуру("Test_Мука", ВидНоменклатурыМатериал);
	СерияМатериал = СоздатьСериюНоменклатуры("Test_Мука_001", ВидНоменклатурыМатериал);
	
	КоличествоФакт = 10;
	ПроцентСухогоВеществаФакт = 90;
	
	// 2. Выполнение функции.
	ПриобретениеТоваровУслуг = СоздатьДокументПриобретениеТоваровУслуг(НоменклатураМатериал, СерияМатериал, КоличествоФакт);
	
	ПроизводствоБезЗаказа = ЮТест.Данные().КонструкторОбъекта("Документы.ПроизводствоБезЗаказа")
		.ФикцияОбязательныхПолей()
		.Установить("Дата", ТекущаяДатаСеанса())
		.Установить("Склад", ПриобретениеТоваровУслуг.Склад)
		.ТабличнаяЧасть("МатериалыИРаботы").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураМатериал)
			.Установить("Серия", СерияМатериал)
			.Установить("КоличествоФакт", КоличествоФакт)
			.Установить("ПроцентСухогоВеществаФакт", ПроцентСухогоВеществаФакт)
		.НовыйОбъект()
		;
	ПроизводствоБезЗаказа.Записать(РежимЗаписиДокумента.Проведение);
		
	// 3. Проверка результата.
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрНакопления.РасходыСырьяНаПроизводствоКондитерскихИзделий";
	ОписаниеЗапроса.Условия.Добавить("Регистратор = &Регистратор");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Регистратор", ПроизводствоБезЗаказа.Ссылка);
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КоличествоФакт");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КоличествоВСухомВеществеФакт");

	ЮТест.ОжидаетЧто(ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса)[0].КоличествоФакт)
		.Равно(КоличествоФакт)
		;
	ЮТест.ОжидаетЧто(ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса)[0].КоличествоВСухомВеществеФакт)
		.Равно(КоличествоФакт * ПроцентСухогоВеществаФакт / 100)
		;

КонецПроцедуры

Процедура ПроверкаФормированияДвиженийНегатив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	ВидНоменклатурыМатериал = СоздатьВидНоменклатуры("Test_Замешивание", Истина, Перечисления.ТипыНоменклатуры.Работа);
	НоменклатураМатериал = СоздатьНоменклатуру("Test_Замешивание", ВидНоменклатурыМатериал);
	
	КоличествоФакт = 10;
	ПроцентСухогоВеществаФакт = 90;
	
	// 2. Выполнение функции.
	ПриобретениеТоваровУслуг = СоздатьДокументПриобретениеТоваровУслуг(НоменклатураМатериал,, КоличествоФакт);
	
	ПроизводствоБезЗаказа = ЮТест.Данные().КонструкторОбъекта("Документы.ПроизводствоБезЗаказа")
		.ФикцияОбязательныхПолей()
		.Установить("Дата", ТекущаяДатаСеанса())
		.ТабличнаяЧасть("МатериалыИРаботы").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураМатериал)
			.Установить("КоличествоФакт", КоличествоФакт)
			.Установить("ПроцентСухогоВеществаФакт", ПроцентСухогоВеществаФакт)
		.НовыйОбъект()
		;
	ПроизводствоБезЗаказа.Записать(РежимЗаписиДокумента.Проведение);
		
	// 3. Проверка результата.
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрНакопления.РасходыСырьяНаПроизводствоКондитерскихИзделий";
	ОписаниеЗапроса.Условия.Добавить("Регистратор = &Регистратор");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Регистратор", ПроизводствоБезЗаказа.Ссылка);
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КоличествоФакт");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КоличествоВСухомВеществеФакт");

	ЮТест.ОжидаетЧто(ЮТЗапросы.РезультатПустой(ОписаниеЗапроса)).ЭтоИстина();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьВидНоменклатуры(Наименование, ИспользоватьСерии, ТипНоменклатуры)
	
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.ВидыНоменклатуры")
		.ФикцияОбязательныхПолей()
		.Установить("ТипНоменклатуры", ТипНоменклатуры)
		.Установить("Наименование", Наименование)
		.Установить("ИспользоватьСерии", ИспользоватьСерии)
		;
		
	ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СоздатьНоменклатуру(Наименование, ВидНоменклатуры)
	
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.Номенклатура")
		.ФикцияОбязательныхПолей()
		.Установить("ВидНоменклатуры", ВидНоменклатуры)
		.Установить("Наименование", Наименование)
		.Установить("ТребуетсяПроверкаЛабораторией", Истина)
		;
		
	ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СоздатьСериюНоменклатуры(Наименование, ВидНоменклатуры)
	
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.СерииНоменклатуры")
		.ФикцияОбязательныхПолей()
		.Установить("ВидНоменклатуры", ВидНоменклатуры)
		.Установить("Наименование", Наименование)
		;
		
	ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СоздатьДокументПриобретениеТоваровУслуг(Номенклатура, Серия, Количество)

	КонструкторПрихода = ЮТест.Данные().КонструкторОбъекта("Документы.ПриобретениеТоваровУслуг")
		.ФикцияОбязательныхПолей()
		.Установить("Дата", ТекущаяДатаСеанса() - 100)
		.ТабличнаяЧасть("Товары").ДобавитьСтроку()
			.Установить("Номенклатура", Номенклатура)
			.Установить("Серия", Серия)
			.Установить("Количество", Количество)
		;
		
	ПриобретениеТоваровУслуг = КонструкторПрихода.Провести();
	
	Возврат ПриобретениеТоваровУслуг;

КонецФункции 

Функция СоздатьДокументПроизводствоБезЗаказа(Склад, Номенклатура, Серия, Количество)

	КонструкторРасхода = ЮТест.Данные().КонструкторОбъекта("Документы.ПроизводствоБезЗаказа")
		.ФикцияОбязательныхПолей()
		.ФикцияРеквизитов("ВыходноеИзделие, РесурснаяСпецификация, Серия")
		.Установить("Дата", ТекущаяДатаСеанса())
		.Установить("Склад", Склад)
		.Установить("КоличествоПлан", 1)
		.Установить("КоличествоФакт", 1)
		.ТабличнаяЧасть("МатериалыИРаботы").ДобавитьСтроку()
			.Установить("Номенклатура", Номенклатура)
			.Установить("Серия", Серия)
			.Установить("КоличествоПлан", Количество)
			.Установить("КоличествоФакт", Количество)
		;

	РасходТовара = КонструкторРасхода.Провести();
	
	Возврат РасходТовара;

КонецФункции 

#КонецОбласти