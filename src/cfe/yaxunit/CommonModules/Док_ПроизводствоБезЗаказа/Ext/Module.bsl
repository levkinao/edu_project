
#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт

	ЮТТесты.ДобавитьТестовыйНабор(НСтр("ru = 'Документ Производство без заказа: Проверка создания'"))
		.ДобавитьТест("ПроверкаСозданияПозитив", НСтр("ru = 'Проверка создания'"), НСтр("ru = 'Позитив, ПроектнаяРабота, Левкина Ольга'")).ВТранзакции()
		.ДобавитьТест("ПроверкаСозданияНегатив", НСтр("ru = 'Проверка создания: Пустая дата'"), НСтр("ru = 'Негатив, ПроектнаяРабота, Левкина Ольга'")).ВТранзакции()
		;
	ЮТТесты.ДобавитьТестовыйНабор(НСтр("ru = 'Документ Производство без заказа: Проверка проведения'"))
		.ДобавитьТест("ПроверкаПроведенияПозитив", НСтр("ru = 'Проверка проведения'"), НСтр("ru = 'Позитив, ПроектнаяРабота, Левкина Ольга'")).ВТранзакции()
		.ДобавитьТест("ПроверкаПроведенияНегатив", НСтр("ru = 'Проверка проведения: Количество больше прихода'"), НСтр("ru = 'Негатив, ПроектнаяРабота, Левкина Ольга'")).ВТранзакции()
		;

КонецПроцедуры

Процедура ПроверкаСозданияПозитив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	ВидНоменклатурыМатериал = СоздатьВидНоменклатуры("Test_Мука", Истина);
	НоменклатураМатериал = СоздатьНоменклатуру("Test_Мука", ВидНоменклатурыМатериал);
	СерияМатериал = СоздатьСериюНоменклатуры("Test_Мука_001", ВидНоменклатурыМатериал);
	
	ВидНоменклатурыВыходноеИзделие = СоздатьВидНоменклатуры("Test_Конфеты", Ложь);
	НоменклатураВыходноеИзделие = СоздатьНоменклатуру("Test_Конфета", ВидНоменклатурыВыходноеИзделие);
	
	КоличествоМатериала = 10;
	РесурснаяСпецификация = СоздатьРесурснуюСпецификацию("Test_Конфета_1кг", НоменклатураВыходноеИзделие, НоменклатураМатериал, КоличествоМатериала);
	
	// 2. Выполнение функции.
		
	ПроизводствоБезЗаказа = ЮТест.Данные().КонструкторОбъекта("Документы.ПроизводствоБезЗаказа")
		.ФикцияОбязательныхПолей()
		.ФикцияРеквизитов("Склад")
		.Установить("Дата", ТекущаяДатаСеанса())
		.Установить("ВыходноеИзделие", НоменклатураВыходноеИзделие)
		.Установить("РесурснаяСпецификация", РесурснаяСпецификация)
		.Установить("КоличествоПлан", 1)
		.Установить("КоличествоФакт", 1)
		.ТабличнаяЧасть("МатериалыИРаботы").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураМатериал)
			.Установить("Серия", СерияМатериал)
			.Установить("КоличествоПлан", КоличествоМатериала)
			.Установить("КоличествоФакт", КоличествоМатериала + 0.5)
			.Установить("ПроцентСухогоВеществаПлан", 94)
			.Установить("ПроцентСухогоВеществаФакт", 95)
		.НовыйОбъект()
		;
		
	// 3. Проверка результата.
	ЮТест.ОжидаетЧто(ПроизводствоБезЗаказа)
		.Метод("Записать").Параметр(РежимЗаписиДокумента.Запись)
		.НеВыбрасываетИсключение()
		;

КонецПроцедуры

Процедура ПроверкаСозданияНегатив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	ВидНоменклатурыМатериал = СоздатьВидНоменклатуры("Test_Мука", Истина);
	НоменклатураМатериал = СоздатьНоменклатуру("Test_Мука", ВидНоменклатурыМатериал);
	СерияМатериал = СоздатьСериюНоменклатуры("Test_Мука_001", ВидНоменклатурыМатериал);
	
	ВидНоменклатурыВыходноеИзделие = СоздатьВидНоменклатуры("Test_Конфеты", Ложь);
	НоменклатураВыходноеИзделие = СоздатьНоменклатуру("Test_Конфета", ВидНоменклатурыВыходноеИзделие);
	
	КоличествоМатериала = 10;
	РесурснаяСпецификация = СоздатьРесурснуюСпецификацию("Test_Конфета_1кг", НоменклатураВыходноеИзделие, НоменклатураМатериал, КоличествоМатериала);
	
	// 2. Выполнение функции.
		
	ПроизводствоБезЗаказа = ЮТест.Данные().КонструкторОбъекта("Документы.ПроизводствоБезЗаказа")
		.ФикцияОбязательныхПолей()
		.ФикцияРеквизитов("Склад")
		.Установить("Дата", ТекущаяДатаСеанса())
		.Установить("ВыходноеИзделие", НоменклатураВыходноеИзделие)
		.Установить("РесурснаяСпецификация", РесурснаяСпецификация)
		.Установить("КоличествоПлан", 1)
		.Установить("КоличествоФакт", 1)
		.ТабличнаяЧасть("МатериалыИРаботы").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураМатериал)
			.Установить("Серия", СерияМатериал)
			.Установить("КоличествоПлан", КоличествоМатериала)
			.Установить("КоличествоФакт", КоличествоМатериала + 0.5)
			.Установить("ПроцентСухогоВеществаПлан", 94)
			.Установить("ПроцентСухогоВеществаФакт", 95)
		.НовыйОбъект()
		;
		
	ПроизводствоБезЗаказа.Дата = Дата(1, 1, 1);
		
	// 3. Проверка результата.
	ЮТест.ОжидаетЧто(ПроизводствоБезЗаказа)
		.Метод("Записать").Параметр(РежимЗаписиДокумента.Запись)
		.ВыбрасываетИсключение("Значение поля ""Дата"" не может быть пустой датой")
		;

КонецПроцедуры

Процедура ПроверкаПроведенияПозитив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	
	ВидНоменклатурыМатериал = СоздатьВидНоменклатуры("Test_Мука", Истина);
	НоменклатураМатериал = СоздатьНоменклатуру("Test_Мука", ВидНоменклатурыМатериал);
	СерияМатериал = СоздатьСериюНоменклатуры("Test_Мука_001", ВидНоменклатурыМатериал);
	
	ВидНоменклатурыВыходноеИзделие = СоздатьВидНоменклатуры("Test_Конфеты", Истина);
	НоменклатураВыходноеИзделие = СоздатьНоменклатуру("Test_Конфета", ВидНоменклатурыВыходноеИзделие);
	СерияВыходноеИзделие = СоздатьСериюНоменклатуры("Test_Конфета_001", ВидНоменклатурыВыходноеИзделие);
	
	КоличествоМатериала = 10;
	РесурснаяСпецификация = СоздатьРесурснуюСпецификацию("Test_Конфета_1кг", НоменклатураВыходноеИзделие, НоменклатураМатериал, КоличествоМатериала);
	
	ПриобретениеТоваровУслуг = СоздатьДокументПриобретениеТоваровУслуг(НоменклатураМатериал, СерияМатериал, КоличествоМатериала);
	
	// 2. Выполнение функции.
		
	ПроизводствоБезЗаказа = ЮТест.Данные().КонструкторОбъекта("Документы.ПроизводствоБезЗаказа")
		.ФикцияОбязательныхПолей()
		.Установить("Дата", ТекущаяДатаСеанса())
		.Установить("Склад", ПриобретениеТоваровУслуг.Склад)
		.Установить("ВыходноеИзделие", НоменклатураВыходноеИзделие)
		.Установить("РесурснаяСпецификация", РесурснаяСпецификация)
		.Установить("Серия", СерияВыходноеИзделие)
		.Установить("КоличествоПлан", 1)
		.Установить("КоличествоФакт", 1)
		.ТабличнаяЧасть("МатериалыИРаботы").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураМатериал)
			.Установить("Серия", СерияМатериал)
			.Установить("КоличествоПлан", КоличествоМатериала)
			.Установить("КоличествоФакт", КоличествоМатериала)
			.Установить("ПроцентСухогоВеществаПлан", 94)
			.Установить("ПроцентСухогоВеществаФакт", 95)
		.НовыйОбъект()
		;
		
	// 3. Проверка результата.
	ЮТест.ОжидаетЧто(ПроизводствоБезЗаказа)
		.Метод("Записать").Параметр(РежимЗаписиДокумента.Проведение)
		.НеВыбрасываетИсключение()
		;

	Движения = ЮТЗапросы.ДвиженияДокумента(ПроизводствоБезЗаказа.Ссылка, "ТоварыНаСкладах");
	ЮТест.ОжидаетЧто(Движения)
		.ИмеетДлинуБольше(0);
	Движения = ЮТЗапросы.ДвиженияДокумента(ПроизводствоБезЗаказа.Ссылка, "РасходыСырьяНаПроизводствоКондитерскихИзделий");
	ЮТест.ОжидаетЧто(Движения)
		.ИмеетДлинуБольше(0);
	Движения = ЮТЗапросы.ДвиженияДокумента(ПроизводствоБезЗаказа.Ссылка, "ЗначенияПроцентаСухихВеществ");
	ЮТест.ОжидаетЧто(Движения)
		.ИмеетДлинуБольше(0);

КонецПроцедуры

Процедура ПроверкаПроведенияНегатив() Экспорт
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	
	НаименованиеМатериала = "Test_Мука";
	ВидНоменклатурыМатериал = СоздатьВидНоменклатуры("Test_Мука", Истина);
	НоменклатураМатериал = СоздатьНоменклатуру(НаименованиеМатериала, ВидНоменклатурыМатериал);
	СерияМатериал = СоздатьСериюНоменклатуры("Test_Мука_001", ВидНоменклатурыМатериал);
	
	ВидНоменклатурыВыходноеИзделие = СоздатьВидНоменклатуры("Test_Конфеты", Истина);
	НоменклатураВыходноеИзделие = СоздатьНоменклатуру("Test_Конфета", ВидНоменклатурыВыходноеИзделие);
	СерияВыходноеИзделие = СоздатьСериюНоменклатуры("Test_Конфета_001", ВидНоменклатурыВыходноеИзделие);
	
	КоличествоМатериала = 10;
	РесурснаяСпецификация = СоздатьРесурснуюСпецификацию("Test_Конфета_1кг", НоменклатураВыходноеИзделие, НоменклатураМатериал, КоличествоМатериала);
	
	ПриобретениеТоваровУслуг = СоздатьДокументПриобретениеТоваровУслуг(НоменклатураМатериал, СерияМатериал, КоличествоМатериала);
	
	// 2. Выполнение функции.
		
	ПроизводствоБезЗаказа = ЮТест.Данные().КонструкторОбъекта("Документы.ПроизводствоБезЗаказа")
		.ФикцияОбязательныхПолей()
		.Установить("Дата", ТекущаяДатаСеанса())
		.Установить("Склад", ПриобретениеТоваровУслуг.Склад)
		.Установить("ВыходноеИзделие", НоменклатураВыходноеИзделие)
		.Установить("РесурснаяСпецификация", РесурснаяСпецификация)
		.Установить("Серия", СерияВыходноеИзделие)
		.Установить("КоличествоПлан", 1)
		.Установить("КоличествоФакт", 1)
		.ТабличнаяЧасть("МатериалыИРаботы").ДобавитьСтроку()
			.Установить("Номенклатура", НоменклатураМатериал)
			.Установить("Серия", СерияМатериал)
			.Установить("КоличествоПлан", КоличествоМатериала)
			.Установить("КоличествоФакт", КоличествоМатериала + 1)
			.Установить("ПроцентСухогоВеществаПлан", 94)
			.Установить("ПроцентСухогоВеществаФакт", 95)
		.НовыйОбъект()
		;
		
	// 3. Проверка результата.
	ЮТест.ОжидаетЧто(ПроизводствоБезЗаказа)
		.Метод("Записать",  ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Проведение))
		.ВыбрасываетИсключение("Не удалось провести: ""Производство без заказа""!")	
		;
	Сообщения = ПолучитьСообщенияПользователю();
	ЮТест.ОжидаетЧто(Сообщения)
		.ИмеетТип("ФиксированныйМассив")
		.ИмеетДлину(1)
		.Свойство("[0].Текст")
			.ИмеетТип("Строка")
			.Содержит("Превышен оперативный складской остаток на складе")
			.Содержит(СтрШаблон("Номенклатура %1", НаименованиеМатериала))
		;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьВидНоменклатуры(Наименование, ИспользоватьСерии)
	
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.ВидыНоменклатуры")
		.ФикцияОбязательныхПолей()
		.Установить("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Товар)
		.Установить("Наименование", Наименование)
		.Установить("ИспользоватьСерии", ИспользоватьСерии)
		;
		
	ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СоздатьНоменклатуру(Наименование, ВидНоменклатуры)
	
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.Номенклатура")
		.ФикцияОбязательныхПолей()
		.Установить("ВидНоменклатуры", ВидНоменклатуры)
		.Установить("Наименование", Наименование)
		.Установить("ТребуетсяПроверкаЛабораторией", Истина)
		;
		
	ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СоздатьСериюНоменклатуры(Наименование, ВидНоменклатуры)
	
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.СерииНоменклатуры")
		.ФикцияОбязательныхПолей()
		.Установить("ВидНоменклатуры", ВидНоменклатуры)
		.Установить("Наименование", Наименование)
		;
		
	ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СоздатьРесурснуюСпецификацию(Наименование, ОсновноеИзделие, Материал, КоличествоМатериала)
	
	КонструкторРесурснойСпецификации = ЮТест.Данные().КонструкторОбъекта("Справочники.РесурсныеСпецификации")
		.ФикцияОбязательныхПолей()
		.Установить("ОсновноеИзделие", ОсновноеИзделие)
		.Установить("Наименование", Наименование)
		.ТабличнаяЧасть("МатериалыИРаботы").ДобавитьСтроку()
			.Установить("Номенклатура", Материал)
			.Установить("Количество", КоличествоМатериала)
		;
		
	РесурснаяСпецификация = КонструкторРесурснойСпецификации.Записать();
	
	Возврат РесурснаяСпецификация;

КонецФункции

Функция СоздатьДокументПриобретениеТоваровУслуг(Номенклатура, Серия, Количество)

	КонструкторПрихода = ЮТест.Данные().КонструкторОбъекта("Документы.ПриобретениеТоваровУслуг")
		.ФикцияОбязательныхПолей()
		.ФикцияРеквизитов("Склад")
		.Установить("Дата", ТекущаяДатаСеанса() - 100)
		.ТабличнаяЧасть("Товары").ДобавитьСтроку()
			.Установить("Номенклатура", Номенклатура)
			.Установить("Серия", Серия)
			.Установить("Количество", Количество)
		;
		
	ПриобретениеТоваровУслуг = КонструкторПрихода.Провести();
	
	Возврат ПриобретениеТоваровУслуг;

КонецФункции 

#КонецОбласти